# Problem 1. Create a vector object containing the names of the days of the week.
days_week <- c("Monday", "Tuesday", "Wednesday","Thursday", "Friday")
days_week
# create a vector of character strings
animal <- c("frog", "spider", "worm", "bee")
animal
days_year
days_year <- 1:365
days_year
days_week [3]
r <- 0:100
area <- pi*(r^2)
area [3]
area [4]
area [3]
dogs <- c(2, 0, 1, 0, 1)
cats <- c(1, 0, 0, 2, 3)
total_pets <- dogs + cats
total_pets
dogs <- c(2, 0, 1, 0, 1)
cats <- c(1, 0, 0, 2, 3)
total_pets_per_household <- dogs + cats
total_pets_per_household
library(openxlsx)
data_frame <- read.xlsx(xlsxFile = "project_data_set.xlsx", sheet = 'sheet1')
library(openxlsx)
data_frame <- read.xlsx(xlsxFile = "project_data_set.xlsx", sheet = 'sheet1')
library(openxlsx)
data_frame <- read.xlsx(xlsxFile = "project_data_set.xlsx", sheet = 'Sheet1')
library(openxlsx)
data_frame <- read.xlsx(xlsxFile = "project_data_set.xlsx")
data_frame <- read.xlsx(file.choose())
my_data <- read.delim("GSE203554_borchelt.final")
my_data <- read.delim("GSE203554_borchelt.final.txt")
my_data <- read.delim(file.choose())
data <- read.table("GSE203554_borchelt.final.txt", header = TRUE, sep = "\t")
data <- read.table("/Users/schiebpe/Library/CloudStorage/OneDrive-Vanderbilt/# Data Analysis/GSE203554_borchelt.final.txt", header = TRUE, sep = "\t")
data(/Users/schiebpe/Library/CloudStorage/OneDrive-Vanderbilt/# Data Analysis/GSE203554_borchelt.final.txt)
#####################
##### Load data #####
#####################
#getwd()
#where r project was created
#setwd()
#set a new path for data have to redo everytime
data(mtcars)
#####################
##### Load data #####
#####################
#getwd()
#where r project was created
#setwd()
#set a new path for data have to redo everytime
data(mtcars)
my_data <- read.delim(file.choose())
data <- read.table("/Users/schiebpe/Library/CloudStorage/OneDrive-Vanderbilt/# Data Analysis/GSE203554_borchelt.final.txt", header = TRUE, sep = "\t")
getwd("GSE203554_borchelt.final.txt")
getwd()
#####################
##### Load data #####
#####################
getwd()
setwd("/Users/schiebpe/Library/CloudStorage/OneDrive-Vanderbilt/# Data Analysis/GSE203554_borchelt.final.txt")
data("GSE203554_borchelt.final.txt")
file.show("/Users/schiebpe/Library/CloudStorage/OneDrive-Vanderbilt/# Data Analysis/GSE203554_borchelt.final.txt")
source("scripts/0_vectors.R")
view(data)
View(data)
setwd("~/OneDrive - Vanderbilt/# Data Analysis/project_data_analysis")
install.packages("pacman")
library(pacman)
pacman::p_load(tidyverse,
devtools,
janitor,
dplyr,
stats,
patchwork,
stringr,
stats,
patchwork,
ggplot2,
tidymodels,
ggcorrplot,
)
install.packages("pacman")
install.packages("pacman")
library(pacman)
pacman::p_load(tidyverse,
devtools,
janitor,
dplyr,
stats,
patchwork,
stringr,
stats,
patchwork,
ggplot2,
tidymodels,
ggcorrplot
)
install.packages("pacman")
install.packages("pacman")
library(pacman)
pacman::p_load(tidyverse,
devtools,
janitor,
dplyr,
stats,
patchwork,
stringr,
stats,
patchwork,
ggplot2,
tidymodels,
ggcorrplot
)
install.packages("pacman")
# Read data file
diabetes <- read.csv("diabetes.csv")
View(diabetes)
# Correlation matrix of health factors and outcome (diabetes)
data(diabetes)
# Calculate the correlation matrix (excluding the Outcome column if it's binary)
correlation_matrix <- cor(diabetes[, 1:8], use = "complete.obs")
# Round the correlation matrix for better visualization
correlation_matrix <- round(correlation_matrix, 1)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal()
install.packages("ggcorrplot")
# Read data file
diabetes <- read.csv("diabetes.csv")
# Calculate the correlation matrix (excluding the Outcome column if it's binary)
correlation_matrix <- cor(diabetes[, 1:8], use = "complete.obs")
# Round the correlation matrix for better visualization
correlation_matrix <- round(correlation_matrix, 1)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal()
library(ggcorrplot)
search()
install.packages("pacman")
library(pacman)
pacman::p_load(tidyverse,
devtools,
janitor,
dplyr,
stats,
patchwork,
stringr,
stats,
patchwork,
ggplot2,
tidymodels,
ggcorrplot
)
install.packages("ggcorrplot")
library(ggcorrplot)
# Read data file
diabetes <- read.csv("diabetes.csv")
# Calculate the correlation matrix (excluding the Outcome column if it's binary)
correlation_matrix <- cor(diabetes[, 1:8], use = "complete.obs")
# Round the correlation matrix for better visualization
correlation_matrix <- round(correlation_matrix, 1)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal()
