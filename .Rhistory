col.names = c("Model", "AIC", "McFadden's R^2"),
digits = 3,  # Round numbers to 3 decimal places
format = "html"
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) %>%
column_spec(2, bold = TRUE, extra_css = "text-align: center;") %>%  # Center second column (AIC)
column_spec(3, bold = TRUE, extra_css = "text-align: center;") %>%  # Center third column (McFadden's R^2)
row_spec(0, extra_css = "text-align: center;")  # Center the header row as well
# Comparison table using Kable
model_comparison %>%
kable(
caption = "Comparison of Logistic Regression Models",
col.names = c("Model", "AIC", "McFadden's R^2"),
digits = 3,  # Round numbers to 3 decimal places
format = "html"
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) %>%
column_spec(2, bold = TRUE, extra_css = "text-align: center;") %>%
column_spec(3, bold = TRUE, extra_css = "text-align: center;") %>%
row_spec(2,3, extra_css = "text-align: center;")
# Comparison table using Kable
model_comparison %>%
kable(
caption = "Comparison of Logistic Regression Models",
col.names = c("Model", "AIC", "McFadden's R^2"),
digits = 3,  # Round numbers to 3 decimal places
format = "html"
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) %>%
column_spec(2, bold = TRUE, extra_css = "text-align: center;") %>%
column_spec(3, bold = TRUE, extra_css = "text-align: center;") %>%
row_spec(0, align = "c")
# Comparison table using Kable
model_comparison %>%
kable(
caption = "Comparison of Logistic Regression Models",
col.names = c("Model", "AIC", "McFadden's R^2"),
digits = 3,  # Round numbers to 3 decimal places
aligh = ("l", "l", "l"),
# Comparison table using Kable
model_comparison %>%
kable(
caption = "Comparison of Logistic Regression Models",
col.names = c("Model", "AIC", "McFadden's R^2"),
digits = 3,  # Round numbers to 3 decimal places
aligh = c("l", "l", "l"),
format = "html"
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) %>%
column_spec(2, bold = TRUE, extra_css = "text-align: center;") %>%
column_spec(3, bold = TRUE, extra_css = "text-align: center;") %>%
row_spec(0, align = "c")
# Comparison table using Kable
model_comparison %>%
kable(
caption = "Comparison of Logistic Regression Models",
col.names = c("Model", "AIC", "McFadden's R^2"),
digits = 3,  # Round numbers to 3 decimal places
aligh = c("l", "l", "l"),
format = "html"
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F)
# Comparison table using Kable
model_comparison %>%
kable(
caption = "Comparison of Logistic Regression Models",
col.names = c("Model", "AIC", "McFadden's R^2"),
digits = 3,  # Round numbers to 3 decimal places
align = c("l", "l", "l"),
format = "html"
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F)
# Comparison table using Kable
model_comparison %>%
kable(
caption = "Comparison of Logistic Regression Models",
col.names = c("Model", "AIC", "McFadden's R^2"),
digits = 3,  # Round numbers to 3 decimal places
align = c("l", "l", "l"),
format = "html"
) %>%
kable_styling(bootstrap_options = c("striped"), full_width = F)
# Custom model names
custom_model_names <- c("Single Predictor (Glucose)", "Reduced (Key Variables)", "Full (All Variables)")
# Calculate AIC and McFadden's R^2 for each model
model_comparison <- data.frame(
Model = custom_model_names,
AIC = c(AIC(model_glucose), AIC(model_glucose_insulin), AIC(model_all)),
McFaddens_R2 = c(
1 - model_glucose$deviance / model_glucose$null.deviance,
1 - model_glucose_insulin$deviance / model_glucose_insulin$null.deviance,
1 - model_all$deviance / model_all$null.deviance
)
)
# Comparison table using Kable
model_comparison %>%
kable(
caption = "Comparison of Logistic Regression Models",
col.names = c("Model", "AIC", "McFadden's R^2"),
digits = 3,  # Round numbers to 3 decimal places
align = c("l", "l", "l"),
format = "html"
) %>%
kable_styling(bootstrap_options = c("striped"), full_width = F)
# Calculate AIC and McFadden's R^2 for each model
model_comparison <- data.frame(
Model = custom_model_names,
AIC = c(AIC(model_glucose), AIC(model_glucose_insulin), AIC(model_all)),
AUC = c(AUC(model_glucose), AUC(model_glucose_insulin), AUC(model_all)),
McFaddens_R2 = c(
1 - model_glucose$deviance / model_glucose$null.deviance,
1 - model_glucose_insulin$deviance / model_glucose_insulin$null.deviance,
1 - model_all$deviance / model_all$null.deviance
)
)
pacman::p_load(tidyverse,
devtools,
janitor,
dplyr,
stats,
patchwork,
stringr,
stats,
patchwork,
ggplot2,
tidymodels,
ggcorrplot,
knitr,
pROC
kableExtra
pacman::p_load(tidyverse,
devtools,
janitor,
dplyr,
stats,
patchwork,
stringr,
stats,
patchwork,
ggplot2,
tidymodels,
ggcorrplot,
knitr,
pROC,
kableExtra
)
# Calculate AIC and McFadden's R^2 for each model
model_comparison <- data.frame(
Model = custom_model_names,
AIC = c(AIC(model_glucose), AIC(model_glucose_insulin), AIC(model_all)),
McFaddens_R2 = c(
1 - model_glucose$deviance / model_glucose$null.deviance,
1 - model_glucose_insulin$deviance / model_glucose_insulin$null.deviance,
1 - model_all$deviance / model_all$null.deviance
)
)
# Comparison table using Kable
model_comparison %>%
kable(
caption = "Comparison of Logistic Regression Models",
col.names = c("Model", "AIC", "McFadden's R^2"),
digits = 3,  # Round numbers to 3 decimal places
align = c("l", "l", "l"),
format = "html"
) %>%
kable_styling(bootstrap_options = c("striped"), full_width = F)
# Comparison table using Kable
model_comparison %>%
kable(
caption = "Table 1: Comparison of Logistic Regression Models",
col.names = c("Model", "AIC", "McFadden's R^2"),
digits = 3,  # Round numbers to 3 decimal places
align = c("l", "l", "l"),
format = "html"
) %>%
kable_styling(bootstrap_options = c("striped"), full_width = F)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE, # Sort correlation matrix hierarchically
type = "half",
lab = TRUE, # Add correlation coefficient labs to plot
lab_size = 3, # Size of correlation coefficient
colors = viridis::viridis(3) # Viridis is a color blind friendly color palette
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"), # Center the plot title
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()   # Remove y-axis title
) +
guides(
fill = guide_colorbar(title = NULL)  # Remove the color legend title
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE, # Sort correlation matrix hierarchically
type = "lower",
lab = TRUE, # Add correlation coefficient labs to plot
lab_size = 3, # Size of correlation coefficient
colors = viridis::viridis(3) # Viridis is a color blind friendly color palette
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"), # Center the plot title
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()   # Remove y-axis title
) +
guides(
fill = guide_colorbar(title = NULL)  # Remove the color legend title
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE, # Sort correlation matrix hierarchically
type = "upperr",
lab = TRUE, # Add correlation coefficient labs to plot
lab_size = 3, # Size of correlation coefficient
colors = viridis::viridis(3) # Viridis is a color blind friendly color palette
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"), # Center the plot title
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()   # Remove y-axis title
) +
guides(
fill = guide_colorbar(title = NULL)  # Remove the color legend title
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE, # Sort correlation matrix hierarchically
type = "upper",
lab = TRUE, # Add correlation coefficient labs to plot
lab_size = 3, # Size of correlation coefficient
colors = viridis::viridis(3) # Viridis is a color blind friendly color palette
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"), # Center the plot title
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()   # Remove y-axis title
) +
guides(
fill = guide_colorbar(title = NULL)  # Remove the color legend title
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE, # Sort correlation matrix hierarchically
type = "upper",
lab = TRUE, # Add correlation coefficient labs to plot
lab_size = 3, # Size of correlation coefficient
colors = viridis::viridis(3) # Viridis is a color blind friendly color palette
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 10),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"), # Center the plot title
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()   # Remove y-axis title
) +
guides(
fill = guide_colorbar(title = NULL)  # Remove the color legend title
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE, # Sort correlation matrix hierarchically
type = "upper",
lab = TRUE, # Add correlation coefficient labs to plot
lab_size = 3, # Size of correlation coefficient
colors = viridis::viridis(3) # Viridis is a color blind friendly color palette
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 10),
axis.text.y = element_blank(),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"), # Center the plot title
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()   # Remove y-axis title
) +
guides(
fill = guide_colorbar(title = NULL)  # Remove the color legend title
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE, # Sort correlation matrix hierarchically
type = "upperr",
lab = TRUE, # Add correlation coefficient labs to plot
lab_size = 3, # Size of correlation coefficient
colors = viridis::viridis(3) # Viridis is a color blind friendly color palette
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 10),
axis.text.y = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"), # Center the plot title
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()   # Remove y-axis title
) +
guides(
fill = guide_colorbar(title = NULL)  # Remove the color legend title
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE, # Sort correlation matrix hierarchically
type = "upper",
lab = TRUE, # Add correlation coefficient labs to plot
lab_size = 3, # Size of correlation coefficient
colors = viridis::viridis(3) # Viridis is a color blind friendly color palette
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 10),
axis.text.y = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"), # Center the plot title
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()   # Remove y-axis title
) +
guides(
fill = guide_colorbar(title = NULL)  # Remove the color legend title
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE, # Sort correlation matrix hierarchically
type = "upper",
lab = TRUE, # Add correlation coefficient labs to plot
lab_size = 3, # Size of correlation coefficient
colors = viridis::viridis(3) # Viridis is a color blind friendly color palette
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"), # Center the plot title
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()   # Remove y-axis title
) +
guides(
fill = guide_colorbar(title = NULL)  # Remove the color legend title
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE, # Sort correlation matrix hierarchically
type = "lower",
lab = TRUE, # Add correlation coefficient labs to plot
lab_size = 3, # Size of correlation coefficient
colors = viridis::viridis(3) # Viridis is a color blind friendly color palette
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"), # Center the plot title
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()   # Remove y-axis title
) +
guides(
fill = guide_colorbar(title = NULL)  # Remove the color legend title
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE, # Sort correlation matrix hierarchically
type = "full",
lab = TRUE, # Add correlation coefficient labs to plot
lab_size = 3, # Size of correlation coefficient
colors = viridis::viridis(3) # Viridis is a color blind friendly color palette
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"), # Center the plot title
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()   # Remove y-axis title
) +
guides(
fill = guide_colorbar(title = NULL)  # Remove the color legend title
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE, # Sort correlation matrix hierarchically
type = "lower",
lab = TRUE, # Add correlation coefficient labs to plot
lab_size = 3, # Size of correlation coefficient
colors = viridis::viridis(3) # Viridis is a color blind friendly color palette
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"), # Center the plot title
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()   # Remove y-axis title
) +
guides(
fill = guide_colorbar(title = NULL)  # Remove the color legend title
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE, # Sort correlation matrix hierarchically
type = "lower",
lab = TRUE, # Add correlation coefficient labs to plot
lab_size = 3, # Size of correlation coefficient
colors = viridis::viridis(3) # Viridis is a color blind friendly color palette
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.text.y = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"), # Center the plot title
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()   # Remove y-axis title
) +
guides(
fill = guide_colorbar(title = NULL)  # Remove the color legend title
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE, # Sort correlation matrix hierarchically
type = "upper",
lab = TRUE, # Add correlation coefficient labs to plot
lab_size = 3, # Size of correlation coefficient
colors = viridis::viridis(3) # Viridis is a color blind friendly color palette
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.text.y = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"), # Center the plot title
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()   # Remove y-axis title
) +
guides(
fill = guide_colorbar(title = NULL)  # Remove the color legend title
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE, # Sort correlation matrix hierarchically
type = "full",
lab = TRUE, # Add correlation coefficient labs to plot
lab_size = 3, # Size of correlation coefficient
colors = viridis::viridis(3) # Viridis is a color blind friendly color palette
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"), # Center the plot title
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()   # Remove y-axis title
) +
guides(
fill = guide_colorbar(title = NULL)  # Remove the color legend title
)
# Custom model names
custom_model_names <- c("Single Predictor (Glucose)", "Reduced (Glucose + BMI)", "Full (All Variables)")
# Calculate AIC and McFadden's R^2 for each model
model_comparison <- data.frame(
Model = custom_model_names,
AIC = c(AIC(model_glucose), AIC(model_glucose_insulin), AIC(model_all)),
McFaddens_R2 = c(
1 - model_glucose$deviance / model_glucose$null.deviance,
1 - model_glucose_insulin$deviance / model_glucose_insulin$null.deviance,
1 - model_all$deviance / model_all$null.deviance
)
)
# Comparison table using Kable
model_comparison %>%
kable(
caption = "Table 1: Comparison of Logistic Regression Models",
col.names = c("Model", "AIC", "McFadden's R^2"),
digits = 3,  # Round numbers to 3 decimal places
align = c("l", "l", "l"),
format = "html"
) %>%
kable_styling(bootstrap_options = c("striped"), full_width = F)
