##################
df_animals <- data.frame(numbers = c(1, 2, 3, 4), letters = c("a", "b", "c", "d"), animals = c("dog", "cat", "bird", "ape"))
df_colors <- data.frame(numbers = c(4, 5, 6, 7), letters = c("c", "d", "e", "f"), colors = c("black", "red", "blue", "green"))
## Row bind, column bind, bind rows, bind columns
df_animals_colors <- rbind(df_animals, df_colors)
df_animals <- data.frame(numbers = c(1, 2, 3, 4), letters = c("a", "b", "c", "d"), animals = c("dog", "cat", "bird", "ape"))
df_colors <- data.frame(numbers = c(4, 5, 6, 7), letters = c("c", "d", "e", "f"), colors = c("black", "red", "blue", "green"))
## Row bind, column bind, bind rows, bind columns
df_animals_colors <- rbind(df_animals, df_colors)
## Combine culture and gdp data
culture_gdp_2020_data <- culture_data %>% select(-c(country)) %>%
left_join(subset(gdp_capita_data, select=c(iso_code, x2020)), by = c("iso_code"))
culture_gdp_2020_data <- culture_gdp_2020_data %>% select(iso_code, x2020, everything())
names(culture_gdp_2020_data)[names(culture_gdp_2020_data) == "x2020"] <- "gdp_capita_2020"
## Combine culture, gdp, and population data
culture_gdp_pop_2020_data <- culture_gdp_2020_data %>%
left_join(subset(population_data, select=c(iso_code, x2020)), by = c("iso_code")) %>%
select(iso_code, x2020, everything())
names(culture_gdp_pop_2020_data)[names(culture_gdp_pop_2020_data) == "x2020"] <- "population_2020"
## Combine culture, gdp, population, and vulnerability data
culture_gdp_pop_vuln_2020_data <- culture_gdp_pop_2020_data %>%
left_join(subset(vulnerability_data, select=c(iso_code, x2020)), by = c("iso_code")) %>%
select(iso_code, x2020, everything())
names(culture_gdp_pop_vuln_2020_data)[names(culture_gdp_pop_vuln_2020_data) == "x2020"] <- "vulnerability_2020"
## Combine culture, gdp, population, vulnerability, and co2 data
culture_gdp_pop_vuln_co2_2020_data <- culture_gdp_pop_vuln_2020_data %>%
left_join(subset(co2_data[,c(1,3,5)], year==2020), by = c("iso_code")) %>% select(-c(year)) %>%
select(iso_code, co2_per_capita, everything())
culture_gdp_pop_vuln_co2_2020_data <- na.omit(culture_gdp_pop_vuln_co2_2020_data)
## Combine culture, gdp, population, vulnerability, and wvs data
culture_gdp_pop_vuln_co2_wvs_2020_data <- culture_gdp_pop_vuln_co2_2020_data %>%
left_join(subset(wvs_regions_data, select=c(iso_code, wvs_region)), by = c("iso_code")) %>%
select(iso_code, wvs_region, everything())
# Combine culture, gdp, population, vulnerability, wvs, and pew data
all_2020_data <- culture_gdp_pop_vuln_co2_wvs_2020_data %>%
left_join(subset(pew_climate_data, year==2021), by = c("iso_code")) %>% select(-c(country, year)) %>%
select(iso_code, everything())
all_2020_data <- na.omit(all_2020_data)
view("all_2020_data")
introduce(all_2020_data)
create_report(all_2020_data)
culture_gdp_2020_data <- culture_data %>% select(-c(country)) %>%
left_join(subset(gdp_capita_data, select=c(iso_code, x2020)), by = c("iso_code"))
culture_gdp_2020_data <- culture_gdp_2020_data %>% select(iso_code, x2020, everything())
names(culture_gdp_2020_data)[names(culture_gdp_2020_data) == "x2020"] <- "gdp_capita_2020"
culture_gdp_pop_2020_data <- culture_gdp_2020_data %>%
left_join(subset(population_data, select=c(iso_code, x2020)), by = c("iso_code")) %>%
select(iso_code, x2020, everything())
names(culture_gdp_pop_2020_data)[names(culture_gdp_pop_2020_data) == "x2020"] <- "population_2020"
culture_gdp_pop_vuln_2020_data <- culture_gdp_pop_2020_data %>%
left_join(subset(vulnerability_data, select=c(iso_code, x2020)), by = c("iso_code")) %>%
select(iso_code, x2020, everything())
names(culture_gdp_pop_vuln_2020_data)[names(culture_gdp_pop_vuln_2020_data) == "x2020"] <- "vulnerability_2020"
View(genotyping_tibble)
View(all_2020_data)
#########################
# Add ISO CODE to data
#########################
culture_data$iso_code <- countrycode(culture_data$country, origin = 'country.name', destination = 'iso3c')
wvs_regions_data$iso_code <- countrycode(wvs_regions_data$country, origin = 'country.name', destination = 'iso3c')
pew_climate_data$iso_code <- countrycode(pew_climate_data$country, origin = 'country.name', destination = 'iso3c')
names(population_data)[names(population_data) == "iso3"] <- "iso_code"
names(vulnerability_data)[names(vulnerability_data) == "iso3"] <- "iso_code"
names(gdp_capita_data)[names(gdp_capita_data) == "iso3"] <- "iso_code"
names(gdp_capita_data)[names(gdp_capita_data) == "gdp"] <- "gdp_capita"
#########################
# Wide versus long data
#########################
## Population data
head(population_data)
head(gdp_capita_data)
population_data_long <- population_data %>%
pivot_longer(cols = -c(iso_code, name), names_to = "year", values_to = "population") %>%
mutate(year = as.numeric(substr(year, 2, 5)))
gdp_capita_data_long <- gdp_capita_data %>%
pivot_longer(cols = -c(iso_code, name), names_to = "year", values_to = "gdp_capita") %>%
mutate(year = as.numeric(substr(year, 2, 5)))
population_data_wide <- population_data_long %>%
pivot_wider(names_from = year, values_from = population)
gdp_capita_data_wide <- gdp_capita_data_long %>%
pivot_wider(names_from = year, values_from = gdp_capita)
##################
# Combining data
##################
df_animals <- data.frame(numbers = c(1, 2, 3, 4), letters = c("a", "b", "c", "d"), animals = c("dog", "cat", "bird", "ape"))
df_colors <- data.frame(numbers = c(4, 5, 6, 7), letters = c("c", "d", "e", "f"), colors = c("black", "red", "blue", "green"))
## Row bind, column bind, bind rows, bind columns
df_animals_colors <- rbind(df_animals, df_colors)
introduce(all_2020_data)
create_report(all_2020_data)
# Data
## ND Gain: https://gain.nd.edu/our-work/country-index
## Our world in data: https://ourworldindata.org/grapher/co-emissions-per-capita
## https://www.heritage.org/index/explore
## Culture variables: https://github.com/damianruck/Cultural_foundations_of_modern_democracies
## Pew data: https://www.pewresearch.org/global/2021/09/14/in-response-to-climate-change-citizens-in-advanced-economies-are-willing-to-alter-how-they-live-and-work/
## WVS data: https://www.worldvaluessurvey.org/wvs.jsp
# Libraries
pacman::p_load(tidyverse,
janitor,
countrycode,
DataExplorer)
# Load data
culture_data <- read_csv("data/culture.csv") %>% clean_names()
wvs_regions_data <- read_csv("data/wvs_regions.csv") %>% clean_names()
co2_data <- read_csv("data/owid_co2_data.csv") %>% clean_names()
pew_climate_data <- read_csv("data/pew_climate.csv") %>% clean_names()
population_data <- read_csv("data/population_nd_gain.csv") %>% clean_names()
vulnerability_data <- read_csv("data/vulnerability_nd_gain.csv") %>% clean_names()
gdp_capita_data <- read_csv("data/gdp_nd_gain.csv") %>% clean_names()
# Scripts
source("scripts/0_clean_combine_data.R")
#########################
# Add ISO CODE to data
#########################
culture_data$iso_code <- countrycode(culture_data$country, origin = 'country.name', destination = 'iso3c')
wvs_regions_data$iso_code <- countrycode(wvs_regions_data$country, origin = 'country.name', destination = 'iso3c')
pew_climate_data$iso_code <- countrycode(pew_climate_data$country, origin = 'country.name', destination = 'iso3c')
names(population_data)[names(population_data) == "iso3"] <- "iso_code"
names(vulnerability_data)[names(vulnerability_data) == "iso3"] <- "iso_code"
names(gdp_capita_data)[names(gdp_capita_data) == "iso3"] <- "iso_code"
names(gdp_capita_data)[names(gdp_capita_data) == "gdp"] <- "gdp_capita"
#########################
# Wide versus long data
#########################
## Population data
head(population_data)
head(gdp_capita_data)
population_data_long <- population_data %>%
pivot_longer(cols = -c(iso_code, name), names_to = "year", values_to = "population") %>%
mutate(year = as.numeric(substr(year, 2, 5)))
gdp_capita_data_long <- gdp_capita_data %>%
pivot_longer(cols = -c(iso_code, name), names_to = "year", values_to = "gdp_capita") %>%
mutate(year = as.numeric(substr(year, 2, 5)))
population_data_wide <- population_data_long %>%
pivot_wider(names_from = year, values_from = population)
gdp_capita_data_wide <- gdp_capita_data_long %>%
pivot_wider(names_from = year, values_from = gdp_capita)
##################
# Combining data
##################
df_animals <- data.frame(numbers = c(1, 2, 3, 4), letters = c("a", "b", "c", "d"), animals = c("dog", "cat", "bird", "ape"))
df_colors <- data.frame(numbers = c(4, 5, 6, 7), letters = c("c", "d", "e", "f"), colors = c("black", "red", "blue", "green"))
## Row bind, column bind, bind rows, bind columns
df_animals_colors <- rbind(df_animals, df_colors)
##############################
# Quick exploratory analysis
##############################
introduce(all_2020_data)
create_report(all_2020_data)
setwd("~/Library/CloudStorage/OneDrive-Vanderbilt/# Data Analysis/cpbp8306-dataanalysis-main/S07_20241003_r_data_cleaning_3")
# Data
## ND Gain: https://gain.nd.edu/our-work/country-index
## Our world in data: https://ourworldindata.org/grapher/co-emissions-per-capita
## https://www.heritage.org/index/explore
## Culture variables: https://github.com/damianruck/Cultural_foundations_of_modern_democracies
## Pew data: https://www.pewresearch.org/global/2021/09/14/in-response-to-climate-change-citizens-in-advanced-economies-are-willing-to-alter-how-they-live-and-work/
## WVS data: https://www.worldvaluessurvey.org/wvs.jsp
# Libraries
pacman::p_load(tidyverse,
janitor,
countrycode,
DataExplorer)
# Load data
culture_data <- read_csv("data/culture.csv") %>% clean_names()
wvs_regions_data <- read_csv("data/wvs_regions.csv") %>% clean_names()
co2_data <- read_csv("data/owid_co2_data.csv") %>% clean_names()
pew_climate_data <- read_csv("data/pew_climate.csv") %>% clean_names()
population_data <- read_csv("data/population_nd_gain.csv") %>% clean_names()
vulnerability_data <- read_csv("data/vulnerability_nd_gain.csv") %>% clean_names()
gdp_capita_data <- read_csv("data/gdp_nd_gain.csv") %>% clean_names()
# Scripts
source("scripts/0_clean_combine_data.R")
culture_data$iso_code <- countrycode(culture_data$country, origin = 'country.name', destination = 'iso3c')
wvs_regions_data$iso_code <- countrycode(wvs_regions_data$country, origin = 'country.name', destination = 'iso3c')
pew_climate_data$iso_code <- countrycode(pew_climate_data$country, origin = 'country.name', destination = 'iso3c')
names(population_data)[names(population_data) == "iso3"] <- "iso_code"
names(vulnerability_data)[names(vulnerability_data) == "iso3"] <- "iso_code"
names(gdp_capita_data)[names(gdp_capita_data) == "iso3"] <- "iso_code"
names(gdp_capita_data)[names(gdp_capita_data) == "gdp"] <- "gdp_capita"
#########################
# Wide versus long data
#########################
## Population data
head(population_data)
head(gdp_capita_data)
population_data_long <- population_data %>%
pivot_longer(cols = -c(iso_code, name), names_to = "year", values_to = "population") %>%
mutate(year = as.numeric(substr(year, 2, 5)))
gdp_capita_data_long <- gdp_capita_data %>%
pivot_longer(cols = -c(iso_code, name), names_to = "year", values_to = "gdp_capita") %>%
mutate(year = as.numeric(substr(year, 2, 5)))
population_data_wide <- population_data_long %>%
pivot_wider(names_from = year, values_from = population)
gdp_capita_data_wide <- gdp_capita_data_long %>%
pivot_wider(names_from = year, values_from = gdp_capita)
##################
# Combining data
##################
df_animals <- data.frame(numbers = c(1, 2, 3, 4), letters = c("a", "b", "c", "d"), animals = c("dog", "cat", "bird", "ape"))
df_colors <- data.frame(numbers = c(4, 5, 6, 7), letters = c("c", "d", "e", "f"), colors = c("black", "red", "blue", "green"))
## Row bind, column bind, bind rows, bind columns
df_animals_colors <- rbind(df_animals, df_colors)
setwd("~/OneDrive - Vanderbilt/# Data Analysis/cpbp8306-dataanalysis-main/S07_20241003_r_data_cleaning_3")
pacman::p_load(tidyverse,
janitor,
countrycode,
DataExplorer)
# Load data
culture_data <- read_csv("data/culture.csv") %>% clean_names()
wvs_regions_data <- read_csv("data/wvs_regions.csv") %>% clean_names()
co2_data <- read_csv("data/owid_co2_data.csv") %>% clean_names()
pew_climate_data <- read_csv("data/pew_climate.csv") %>% clean_names()
population_data <- read_csv("data/population_nd_gain.csv") %>% clean_names()
vulnerability_data <- read_csv("data/vulnerability_nd_gain.csv") %>% clean_names()
gdp_capita_data <- read_csv("data/gdp_nd_gain.csv") %>% clean_names()
View(co2_data)
View(culture_data)
View(dat)
#########################
# Add ISO CODE to data
#########################
culture_data$iso_code <- countrycode(culture_data$country, origin = 'country.name', destination = 'iso3c')
wvs_regions_data$iso_code <- countrycode(wvs_regions_data$country, origin = 'country.name', destination = 'iso3c')
pew_climate_data$iso_code <- countrycode(pew_climate_data$country, origin = 'country.name', destination = 'iso3c')
names(population_data)[names(population_data) == "iso3"] <- "iso_code"
names(vulnerability_data)[names(vulnerability_data) == "iso3"] <- "iso_code"
names(gdp_capita_data)[names(gdp_capita_data) == "iso3"] <- "iso_code"
names(gdp_capita_data)[names(gdp_capita_data) == "gdp"] <- "gdp_capita"
View(wvs_regions_data)
#########################
# Wide versus long data
#########################
## Population data
head(population_data)
head(gdp_capita_data)
population_data_long <- population_data %>%
pivot_longer(cols = -c(iso_code, name), names_to = "year", values_to = "population") %>%
mutate(year = as.numeric(substr(year, 2, 5)))
gdp_capita_data_long <- gdp_capita_data %>%
pivot_longer(cols = -c(iso_code, name), names_to = "year", values_to = "gdp_capita") %>%
mutate(year = as.numeric(substr(year, 2, 5)))
population_data_wide <- population_data_long %>%
pivot_wider(names_from = year, values_from = population)
gdp_capita_data_wide <- gdp_capita_data_long %>%
pivot_wider(names_from = year, values_from = gdp_capita)
View(gdp_capita_data)
View(gdp_capita_data_long)
View(gdp_capita_data_wide)
View(gdp_capita_data_long)
View(gdp_capita_data_wide)
View(gdp_capita_data_long)
View(gdp_capita_data_long)
##################
# Combining data
##################
df_animals <- data.frame(numbers = c(1, 2, 3, 4), letters = c("a", "b", "c", "d"), animals = c("dog", "cat", "bird", "ape"))
df_colors <- data.frame(numbers = c(4, 5, 6, 7), letters = c("c", "d", "e", "f"), colors = c("black", "red", "blue", "green"))
## Row bind, column bind, bind rows, bind columns
df_animals_colors <- rbind(df_animals, df_colors)
df_animals_colors <- bind_rows(df_animals, df_colors)
df_animals_colors <- cbind(df_animals, df_colors)
df_animals_colors <- bind_cols(df_animals, df_colors)
View(df_animals_colors)
View(df_colors)
df_animals_colors <- bind_cols(df_animals, df_colors)
View(df_animals_colors)
## Join data
inner_join(df_animals, df_colors, by = "numbers")
full_join(df_animals, df_colors, by = "numbers")
left_join(df_animals, df_colors, by = "numbers")
right_join(df_animals, df_colors, by = "numbers")
semi_join(df_animals, df_colors, by = "numbers")
anti_join(df_animals, df_colors, by = "numbers")
anti_join(df_colors, df_animals, by = "numbers")
View(df_animals_colors)
View(df_animals)
View(df_animals_colors)
View(df_animals)
## Merge data
#In SQL database terminology, the
# Default: all = FALSE gives a natural join, a special case of an inner join.
# all.x = TRUE gives a left (outer) join,
# all.y = TRUE a right (outer) join,
# both (all = TRUE) a full join.
merge(df_animals, df_colors, by = "numbers", all = FALSE)
merge(df_animals, df_colors, by = "numbers", all.x = TRUE)
merge(df_animals, df_colors, by = "numbers", all.y = TRUE)
merge(df_animals, df_colors, by = "numbers", all = TRUE)
#########################
# Combining our data
#########################
## Combine culture and gdp data
culture_gdp_2020_data <- culture_data %>% select(-c(country)) %>%
left_join(subset(gdp_capita_data, select=c(iso_code, x2020)), by = c("iso_code"))
culture_gdp_2020_data <- culture_gdp_2020_data %>% select(iso_code, x2020, everything())
names(culture_gdp_2020_data)[names(culture_gdp_2020_data) == "x2020"] <- "gdp_capita_2020"
## Combine culture, gdp, and population data
culture_gdp_pop_2020_data <- culture_gdp_2020_data %>%
left_join(subset(population_data, select=c(iso_code, x2020)), by = c("iso_code")) %>%
select(iso_code, x2020, everything())
names(culture_gdp_pop_2020_data)[names(culture_gdp_pop_2020_data) == "x2020"] <- "population_2020"
## Combine culture, gdp, population, and vulnerability data
culture_gdp_pop_vuln_2020_data <- culture_gdp_pop_2020_data %>%
left_join(subset(vulnerability_data, select=c(iso_code, x2020)), by = c("iso_code")) %>%
select(iso_code, x2020, everything())
names(culture_gdp_pop_vuln_2020_data)[names(culture_gdp_pop_vuln_2020_data) == "x2020"] <- "vulnerability_2020"
## Combine culture, gdp, population, vulnerability, and co2 data
culture_gdp_pop_vuln_co2_2020_data <- culture_gdp_pop_vuln_2020_data %>%
left_join(subset(co2_data[,c(1,3,5)], year==2020), by = c("iso_code")) %>% select(-c(year)) %>%
select(iso_code, co2_per_capita, everything())
culture_gdp_pop_vuln_co2_2020_data <- na.omit(culture_gdp_pop_vuln_co2_2020_data)
## Combine culture, gdp, population, vulnerability, and wvs data
culture_gdp_pop_vuln_co2_wvs_2020_data <- culture_gdp_pop_vuln_co2_2020_data %>%
left_join(subset(wvs_regions_data, select=c(iso_code, wvs_region)), by = c("iso_code")) %>%
select(iso_code, wvs_region, everything())
# Combine culture, gdp, population, vulnerability, wvs, and pew data
all_2020_data <- culture_gdp_pop_vuln_co2_wvs_2020_data %>%
left_join(subset(pew_climate_data, year==2021), by = c("iso_code")) %>% select(-c(country, year)) %>%
select(iso_code, everything())
all_2020_data <- na.omit(all_2020_data)
introduce(all_2020_data)
create_report(all_2020_data)
setwd("~/Library/CloudStorage/OneDrive-Vanderbilt/# Data Analysis/project_data_analysis")
#install.packages("pacman")
#library(pacman)
pacman::p_load(tidyverse,
devtools,
janitor,
dplyr)
dat <- read.table("GSE203554_borchelt.final.txt")
#creating a tibble and moving column names to the header
genotyping_initial <- read.table("GSE203554_borchelt.final.txt", header = TRUE)
genotype_headernames_adjusted <-
genotyping_initial %>%
rename(
WT_1 = WT_191,
WT_2 = WT_207,
WT_3 = WT_214,
WT_4 = WT_218,
WT_5 = WT_225,
APP_PSI_CNT_1 = APPPI184,
APP_PSI_CNT_2 = APPPI255,
APP_PSI_CNT_3 = APPPI262,
APP_PSI_CNT_4 = APPPI307,
APP_PSI_CNT_5 = APPPI318,
APP_PSI_BCI838_1 = APPPI198,
APP_PSI_BCI838_2 =APPPI245,
APP_PSI_BCI838_3 =APPPI288,
APP_PSI_BCI838_4 =APPPI322,
APP_PSI_PE_1 = APPPI224,
APP_PSI_PE_2 = APPPI236,
APP_PSI_PE_3 = APPPI264,
APP_PSI_PE_4 = APPPI275,
APP_PSI_PE_5 = APPPI313,
APP_PSI_BCI838_PE_1 = APPPI182,
APP_PSI_BCI838_PE_2 = APPPI286,
APP_PSI_BCI838_PE_3 =APPPI320,
APP_PSI_BCI838_PE_4 =APPPI321,
APP_PSI_BCI838_PE_5 =APPPI376
)
View(genotype_headernames_adjusted)
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse)
## Load in the data
data(CO2)
View(co2_data)
View(CO2)
quebec <- filter(CO2, type == Quebec)
quebec <- filter(CO2, type == "Quebec")
quebec <- filter(CO2, type == "Quebec")
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse)
## Load in the data
data(CO2)
quebec <- filter(CO2, type == "Quebec")
quebec <- filter(CO2, Type == "Quebec")
mississippi <- CO2 %>%
filter(Type == "Mississippi")
View(quebec)
View(mississippi)
mississippi <- CO2 %>%
filter(Type == "Mississippi") %>%
filter(conc == 175)
View(mississippi)
mississippi <- CO2 %>%
filter(Type == "Mississippi") %>%
filter(conc == 175)
select(c(Plant, uptake))
mississippi <- CO2 %>%
filter(Type == "Mississippi") %>%
filter(conc == 175) %>%
select(c(Plant, uptake))
nonchilled <- CO2 %>%
filter(Type == "nonchilled")
View(nonchilled)
nonchilled <- CO2 %>%
filter(Treatment == "nonchilled")
View(nonchilled)
mean(nonchilled$uptake)
stats <- CO2 %>%
group_by(Type)
summarize(avg_uptake = mean(uptake))
stats <- CO2 %>%
group_by(Type) %>%
summarize(avg_uptake = mean(uptake))
View(stats)
stats1 <- CO2 %>%
group_by(Type, Treatment) %>%
summarize(avg_uptake = mean(uptake))
View(stats1)
CO2$uptake_millimoles <- CO2$uptake/1000
View(CO2)
AboveMedian <- CO2 %>%
filter(uptake > median(uptake))
View(AboveMedian)
CO2 <- CO2 %>%
rename(PlantType = Type,
TreatmentType = Treatment)
)
CO2 <- CO2 %>%
rename(PlantType = Type,
TreatmentType = Treatment)
View(CO2)
CO2 <- CO2 %>%
rename(PlantType = Type,
TreatmentType = Treatment)
View(CO2)
colnames(CO2)
?pivot
?pivot_longer
CO2_long <- pivot_longer(CO2, c(TreatmentType, PlantType))
View(CO2_long)
CO2_long <- pivot_longer(CO2, c(TreatmentType, PlantType), names_to = variable, values_to = "value")
CO2_long <- pivot_longer(CO2, c(TreatmentType, PlantType), names_to = "variable", values_to = "value")
CO2_long <- pivot_longer(CO2, c(TreatmentType, PlantType), names_to = "variable", values_to = "value")
CO2_wide <- pivot_wider(CO2_long, names_from = variable, values_from = value)
View(CO2_wide)
# Scripts
source("scripts/0_clean_combine_data.R")
setwd("~/Library/CloudStorage/OneDrive-Vanderbilt/# Data Analysis/project_data_analysis")
#creating a tibble and moving column names to the header
genotyping_initial <- read.table("GSE203554_normalised.borchelt.final.txt", header = TRUE)
dat <- read.table("GSE203554_normalised.borchelt.final.txt")
#creating a tibble and moving column names to the header
genotyping_initial <- read.table("GSE203554_normalised.borchelt.final.txt", header = TRUE)
genotype_headernames_adjusted <-
genotyping_initial %>%
rename(
WT_1 = WT_191,
WT_2 = WT_207,
WT_3 = WT_214,
WT_4 = WT_218,
WT_5 = WT_225,
APP_PSI_CNT_1 = APPPI184,
APP_PSI_CNT_2 = APPPI255,
APP_PSI_CNT_3 = APPPI262,
APP_PSI_CNT_4 = APPPI307,
APP_PSI_CNT_5 = APPPI318,
APP_PSI_BCI838_1 = APPPI198,
APP_PSI_BCI838_2 =APPPI245,
APP_PSI_BCI838_3 =APPPI288,
APP_PSI_BCI838_4 =APPPI322,
APP_PSI_PE_1 = APPPI224,
APP_PSI_PE_2 = APPPI236,
APP_PSI_PE_3 = APPPI264,
APP_PSI_PE_4 = APPPI275,
APP_PSI_PE_5 = APPPI313,
APP_PSI_BCI838_PE_1 = APPPI182,
APP_PSI_BCI838_PE_2 = APPPI286,
APP_PSI_BCI838_PE_3 =APPPI320,
APP_PSI_BCI838_PE_4 =APPPI321,
APP_PSI_BCI838_PE_5 =APPPI376
)
View(genotyping_initial)
View(genotype_headernames_adjusted)
View(genotyping_initial)
View(genotype_headernames_adjusted)
#creating a tibble and moving column names to the header
gene_raw <- read.table("GSE203554_normalised.borchelt.final.txt", header = TRUE)
gene_headernames_adjusted <-
gene_raw %>%
rename(
WT_1 = WT_191,
WT_2 = WT_207,
WT_3 = WT_214,
WT_4 = WT_218,
WT_5 = WT_225,
APP_PSI_CNT_1 = APPPI184,
APP_PSI_CNT_2 = APPPI255,
APP_PSI_CNT_3 = APPPI262,
APP_PSI_CNT_4 = APPPI307,
APP_PSI_CNT_5 = APPPI318,
APP_PSI_BCI838_1 = APPPI198,
APP_PSI_BCI838_2 =APPPI245,
APP_PSI_BCI838_3 =APPPI288,
APP_PSI_BCI838_4 =APPPI322,
APP_PSI_PE_1 = APPPI224,
APP_PSI_PE_2 = APPPI236,
APP_PSI_PE_3 = APPPI264,
APP_PSI_PE_4 = APPPI275,
APP_PSI_PE_5 = APPPI313,
APP_PSI_BCI838_PE_1 = APPPI182,
APP_PSI_BCI838_PE_2 = APPPI286,
APP_PSI_BCI838_PE_3 =APPPI320,
APP_PSI_BCI838_PE_4 =APPPI321,
APP_PSI_BCI838_PE_5 =APPPI376
)
View(gene_raw)
View(gene_headernames_adjusted)
View(genotype_headernames_adjusted)
