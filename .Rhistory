theme_minimal()
# Calculate the correlation matrix (excluding the Outcome column if it's binary)
correlation_matrix <- cor(diabetes[, 1:9], use = "complete.obs")
# Round the correlation matrix for better visualization
correlation_matrix <- round(correlation_matrix, 1)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal()
# Calculate the correlation matrix (excluding the Outcome column if it's binary)
correlation_matrix <- cor(diabetes[, 1:8])
# Round the correlation matrix for better visualization
correlation_matrix <- round(correlation_matrix, 1)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal()
# Calculate the correlation matrix (excluding the Outcome column if it's binary)
correlation_matrix <- cor(diabetes[, 1:8])
# Round the correlation matrix for better visualization
correlation_matrix <- round(correlation_matrix, 1)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal()
correlation_matrix <- round(cor(diabetes), 1)
# Round the correlation matrix for better visualization
correlation_matrix <- round(correlation_matrix, 1)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal()
# Calculate the correlation matrix (excluding the Outcome column if it's binary)
correlation_matrix <- round(cor(diabetes), 1)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal()
# Convert Outcome to numeric
diabetes$Outcome <- as.numeric(diabetes$Outcome)
# Calculate the correlation matrix (excluding the Outcome column if it's binary)
correlation_matrix <- round(cor(diabetes), 1)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal()
# Read data file
diabetes <- read.csv("diabetes.csv")
# Convert Outcome to numeric
diabetes$Outcome <- as.numeric(diabetes$Outcome)
# Calculate the correlation matrix (excluding the Outcome column if it's binary)
correlation_matrix <- round(cor(diabetes, use = "complete.obs"))
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal()
# Read data file
diabetes <- read.csv("diabetes.csv")
# Calculate the correlation matrix (excluding the Outcome column if it's binary)
correlation_matrix <- round(cor(diabetes, use = "complete.obs"))
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal()
# Calculate the correlation matrix (excluding the Outcome column if it's binary)
correlation_matrix <- round(cor(diabetes), 1)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal()
# Read data file
diabetes <- read.csv("diabetes.csv")
# Calculate the correlation matrix (excluding the Outcome column if it's binary)
correlation_matrix <- round(cor(diabetes), 1)
# Set consistent row and columnm names
rownames(correlation_matrix) <- colnames(correlation_matrix)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal()
# Read data file
diabetes <- read.csv("diabetes.csv")
# Calculate the correlation matrix (excluding the Outcome column if it's binary)
correlation_matrix <- round(cor(diabetes), use = "complete.obs")
# Read data file
diabetes <- read.csv("diabetes.csv")
# Calculate the correlation matrix (excluding the Outcome column if it's binary)
correlation_matrix <- round(cor(diabetes), 1)
# Set consistent row and columnm names
rownames(correlation_matrix) <- colnames(correlation_matrix)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal()
# Read data file
diabetes <- read.csv("diabetes.csv")
# Calculate the correlation matrix (excluding the Outcome column if it's binary)
correlation_matrix <- round(cor(diabetes), 1)
# Set column names
colnames(diabetes) <- c("Pregnancies", "Glucose", "Blood Pressure", "Skin Thickness", "Insulin", "Body Mass Index",
"Diabetes Pedigree Function", "Age", "Outcome")
# Set consistent row and columnm names
rownames(correlation_matrix) <- colnames(correlation_matrix)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal()
# Read data file
diabetes <- read.csv("diabetes.csv")
# Calculate the correlation matrix (excluding the Outcome column if it's binary)
correlation_matrix <- round(cor(diabetes), 1)
# Set column names
colnames(diabetes) <- c("Pregnancies", "Glucose", "Blood Pressure", "Skin Thickness", "Insulin", "Body Mass Index",
"Diabetes Pedigree Function", "Age", "Outcome")
# Set consistent row and columnm names
rownames(correlation_matrix) <- colnames(correlation_matrix)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal()
# Read data file
diabetes <- read.csv("diabetes.csv")
# Calculate the correlation matrix (excluding the Outcome column if it's binary)
correlation_matrix <- round(cor(diabetes), 1)
# Set column names
colnames(diabetes) <- c("Pregnancies", "Glucose", "Blood Pressure", "Skin Thickness", "Insulin", "Body Mass Index",
"Diabetes Pedigree Function", "Age", "Outcome")
# Set consistent row and columnm names
rownames(correlation_matrix) <- colnames(correlation_matrix)
# Put spaces in names
colnames(correlation_matrix) <- display_names
rownames(correlation_matrix) <- display_names
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal()
data(diabetes)
correlation_plot <- round(cor(diabetes), 1)
head(corr[, 1:8])
ggcorrplot(correlation_plot, col = viridis)
colnames(diabetes) <- c("Pregnancies", "Glucose", "Blood Pressure", "Skin Thickness", "Insulin", "Body Mass Index",
"Diabetes Pedigree Function", "Age", "Outcome")
corr_matrix <- ggcorrplot(
hc.order = TRUE,
lab_size = 3) +
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "full",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal()
# Read data file
diabetes <- read.csv("diabetes.csv")
# Calculate the correlation matrix (excluding the Outcome column if it's binary)
correlation_matrix <- round(cor(diabetes), 1)
# Set column names
colnames(diabetes) <- c("Pregnancies", "Glucose", "Blood Pressure", "Skin Thickness", "Insulin", "Body Mass Index",
"Diabetes Pedigree Function", "Age", "Outcome")
# Set consistent row and columnm names
rownames(correlation_matrix) <- colnames(correlation_matrix)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "full",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal()
# Create the correlation plot using ggcorrplot
ggcorrplot(
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "full",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.y = element_text(angle = 0, hjust = 1),  # Rotate y-axis labels to vertical
plot.title = element_text(hjust = 0.5)
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "Full",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal()
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "full",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal()
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "full",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.y = element_text(angle = 0, hjust = 1),  # Rotate y-axis labels to vertical
plot.title = element_text(hjust = 0.5)
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "full",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.y = element_text(angle = 90, vjust = 0.5, hjust = 0.5),  # Rotate y-axis labels to vertical
plot.title = element_text(hjust = 0.5)
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "full",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 0.5),  # Rotate y-axis labels to vertical
plot.title = element_text(hjust = 0.5)
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "full",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),  # Rotate x-axis labels to vertical
plot.title = element_text(hjust = 0.5)
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "full",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),  # Rotate x-axis labels to vertical
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()   # Remove y-axis title
)
# Read data file
diabetes <- read.csv("diabetes.csv")
# Set column names
colnames(diabetes) <- c("Pregnancies", "Glucose", "Blood Pressure", "Skin Thickness", "Insulin", "Body Mass Index",
"Diabetes Pedigree Function", "Age", "Outcome")
# Set consistent row and columnm names
rownames(correlation_matrix) <- colnames(correlation_matrix)
# Calculate the correlation matrix (excluding the Outcome column if it's binary)
correlation_matrix <- round(cor(diabetes), 1)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE,
type = "full",
lab = TRUE,
lab_size = 3,
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),  # Rotate x-axis labels to vertical
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()   # Remove y-axis title
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE, # Sort correlation matrix hierarchically
type = "full",
lab = TRUE,
lab_size = 3, # Size of correlation coefficient
colors = viridis::viridis(3)
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),  # Rotate x-axis labels to vertical
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()   # Remove y-axis title
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE, # Sort correlation matrix hierarchically
type = "full",
lab = TRUE, # Add correlation coefficient labs to plot
lab_size = 3, # Size of correlation coefficient
colors = viridis::viridis(3) # Viridis is a color blind friendly color palette
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),  # Rotate x-axis labels to vertical
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()   # Remove y-axis title
) +
guides(fill = guide_legend(title = NULL))
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE, # Sort correlation matrix hierarchically
type = "full",
lab = TRUE, # Add correlation coefficient labs to plot
lab_size = 3, # Size of correlation coefficient
colors = viridis::viridis(3) # Viridis is a color blind friendly color palette
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),  # Rotate x-axis labels to vertical
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()   # Remove y-axis title
) +
guides(
fill = guide_legend(title = NULL,  # Remove the color legend title
keyheight = unit(1, "cm"),  # Adjust the size of color key
keywidth = unit(1, "cm"))  # Adjust the width of color key
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE, # Sort correlation matrix hierarchically
type = "full",
lab = TRUE, # Add correlation coefficient labs to plot
lab_size = 3, # Size of correlation coefficient
colors = viridis::viridis(3) # Viridis is a color blind friendly color palette
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),  # Rotate x-axis labels to vertical
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()   # Remove y-axis title
)
# Create the correlation plot using ggcorrplot
ggcorrplot(
correlation_matrix,
hc.order = TRUE, # Sort correlation matrix hierarchically
type = "full",
lab = TRUE, # Add correlation coefficient labs to plot
lab_size = 3, # Size of correlation coefficient
colors = viridis::viridis(3) # Viridis is a color blind friendly color palette
) +
ggtitle("Correlation Matrix of Health Factors") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),  # Rotate x-axis labels to vertical
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()   # Remove y-axis title
) +
guides(
fill = guide_colorbar(title = NULL)  # Remove the color legend title without affecting the blending
)
